/**
 * ============================================================================
 * VitePress 默认主题样式自定义
 * ============================================================================
 *
 * 通过覆盖默认的 CSS 变量来自定义主题。
 * 官方变量列表：https://github.com/vuejs/vitepress/blob/main/src/client/theme-default/styles/vars.css
 */

/**
 * --------------------------------------------------------------------------
 * 颜色系统说明
 * --------------------------------------------------------------------------
 *
 * 每种颜色都遵循一个精确的色阶系统，包含 3 个不同亮度的实体色和 1 个柔和色。
 *
 * - `XXX-1`: 最鲜明的颜色，主要用于彩色文本。当它用于 `XXX-soft` 背景之上时，
 *            必须满足 WCAG 对比度要求。
 *
 * - `XXX-2`: 主要用于按钮等元素的悬停（hover）状态。
 *
 * - `XXX-3`: 用于实体背景，例如按钮的背景色。它上面的文字颜色（通常是纯白 #ffffff）
 *            必须满足 WCAG 对比度要求。
 *
 * - `XXX-soft`: 用于柔和的背景，例如自定义容器或徽章。当 `XXX-1` 颜色的文本
 *               置于其上时，必须满足 WCAG 对比度要求。
 *               柔和色必须带有半透明的 alpha 通道，这至关重要，因为它允许多个
 *               “柔和”颜色叠加，例如在自定义容器中嵌入行内代码块。
 *
 * - `default`: 用于纯粹的、无特殊含义的视觉提示，例如菜单项的悬停背景色。
 *
 * - `brand`: 用于主要的品牌颜色，如链接文本、品牌主题按钮等。
 *
 * - `tip`: 用于提示有用的信息。默认主题下，它使用品牌颜色。
 *
 * - `warning`: 用于向用户发出警告。
 *
 * - `danger`: 用于显示错误或危险信息。
 * --------------------------------------------------------------------------
 */

:root {
  /* --- 基础颜色定义 (VitePress 默认) --- */
  --vp-c-default-1: var(--vp-c-gray-1);
  --vp-c-default-2: var(--vp-c-gray-2);
  --vp-c-default-3: var(--vp-c-gray-3);
  --vp-c-default-soft: var(--vp-c-gray-soft);

  /* --- 提示、警告和危险颜色 --- */
  --vp-c-tip-1: var(--vp-c-brand-1);
  --vp-c-tip-2: var(--vp-c-brand-2);
  --vp-c-tip-3: var(--vp-c-brand-3);
  --vp-c-tip-soft: var(--vp-c-brand-soft);

  --vp-c-warning-1: var(--vp-c-yellow-1);
  --vp-c-warning-2: var(--vp-c-yellow-2);
  --vp-c-warning-3: var(--vp-c-yellow-3);
  --vp-c-warning-soft: var(--vp-c-yellow-soft);

  --vp-c-danger-1: var(--vp-c-red-1);
  --vp-c-danger-2: var(--vp-c-red-2);
  --vp-c-danger-3: var(--vp-c-red-3);
  --vp-c-danger-soft: var(--vp-c-red-soft);

  /*
   * ==========================================================================
   * --- 自定义主题区 ---
   * ==========================================================================
   */

  /* --- 全局主题色：活力蓝 --- */
  --vp-c-brand-1: #007bff; /* 主要品牌色：按钮、链接等 */
  --vp-c-brand-2: #3395ff; /* 悬停和焦点状态的浅色调 */
  --vp-c-brand-3: #006ae0; /* 激活状态的深色调 */
  --vp-c-brand-soft: rgba(0, 123, 255, 0.14); /* 柔和背景色 */


  /* --- 组件: 按钮 (Button) --- */
  --vp-button-brand-border: transparent;
  --vp-button-brand-text: var(--vp-c-white);
  --vp-button-brand-bg: var(--vp-c-brand-3);
  --vp-button-brand-hover-border: transparent;
  --vp-button-brand-hover-text: var(--vp-c-white);
  --vp-button-brand-hover-bg: var(--vp-c-brand-2);
  --vp-button-brand-active-border: transparent;
  --vp-button-brand-active-text: var(--vp-c-white);
  --vp-button-brand-active-bg: var(--vp-c-brand-1);

  /* --- 组件: 主页 (Home) --- */
  --vp-home-hero-name-color: var(--vp-c-brand-1); /* 将主标题颜色设为品牌色 */
  --vp-home-hero-name-background: unset; /* 移除渐变背景 */
  --vp-home-hero-image-background-image: linear-gradient(-45deg, #bd34fe 50%, #47caff 50%);
  --vp-home-hero-image-filter: blur(68px);

  /* --- 组件: 自定义块 (Custom Block) --- */
  --vp-custom-block-tip-border: transparent;
  --vp-custom-block-tip-text: var(--vp-c-text-1);
  --vp-custom-block-tip-bg: var(--vp-c-brand-soft);
  --vp-custom-block-tip-code-bg: var(--vp-c-brand-soft);
}

/* --- 响应式调整：主页 Logo 滤镜 --- */
@media (min-width: 640px) {
  :root {
    --vp-home-hero-image-filter: blur(56px);
  }
}

@media (min-width: 960px) {
  :root {
    --vp-home-hero-image-filter: blur(68px);
  }
}

/* --- 组件: Algolia 搜索框 --- */
.DocSearch {
  --docsearch-primary-color: var(--vp-c-brand-1) !important;
}


/*
 * ==========================================================================
 * --- 附加自定义样式 ---
 * ==========================================================================
 */

/*
 * --- 主页 Logo 自定义辉光 ---
 * 为主页“英雄区域”的 Logo 图片添加柔和、多彩的辉光效果。
 */
.VPHero .VPImage.image-src {
  max-width: 220px; /* 将 Logo 最大宽度调整为 220px */
  transform: translateY(-100px) translateX(-100px) rotate(5deg); /* 向右平移并顺时针旋转 */

  /*
   * 使用 filter: drop-shadow(...) 添加辉光。
   * 与 box-shadow 不同，drop-shadow 能完美贴合不规则边缘。
   * 通过叠加多个辉光层实现丰富效果：
   *  - 内层: 亮蓝色
   *  - 中层: 柔和青色
   *  - 外层: 淡雅紫色
   */
  filter:
    drop-shadow(0 0 15px rgba(0, 122, 255, 0.8))
    drop-shadow(0 0 45px rgba(0, 225, 255, 0.5));

  /* 添加无限循环的脉冲动画，让辉光更具“活力” */
  animation: pulse-glow 10s infinite alternate;
}

/*
 * --- 辉光脉冲动画关键帧 ---
 * 通过在两种辉光状态间平滑过渡，创造呼吸般的效果。
 */
@keyframes pulse-glow {
  from {
    filter:
      drop-shadow(0 0 15px rgba(0, 122, 255, 0.8))
      drop-shadow(0 0 45px rgba(0, 225, 255, 0.5))
  }
  to {
    filter:
      drop-shadow(0 0 25px rgba(0, 122, 255, 0.9))
      drop-shadow(0 0 60px rgba(0, 225, 255, 0.6))
  }
}

/*
 * --- 内容区域图片圆角 ---
 * 为文档内容中的图片添加圆角，使其视觉上更柔和。
 */
.VPDoc img {
  border-radius: 8px; /* 设置 8px 的圆角 */
}

/*
 * --- 主页功能卡片悬停效果 ---
 * 为主页的功能卡片添加一个平滑的描边淡入淡出效果。
 */
.VPFeature {
  border: 1px solid transparent; /* 默认状态下边框透明 */
  transition: border-color 0.3s ease-in-out; /* 为边框颜色变化添加过渡效果 */
}

.VPFeature:hover {
  border-color: var(--vp-c-brand-1); /* 鼠标悬停时，边框颜色变为品牌色 */
}


/*
 * ==========================================================================
 * --- 全局滚动条样式 ---
 * ==========================================================================
 *
 * 定义一个纤细、简约且能适配日夜间模式的滚动条。
 * 这种样式适用于所有基于 WebKit 的浏览器 (Chrome, Safari, Edge)。
 */

/* --- 定义滚动条的整体尺寸 --- */
::-webkit-scrollbar {
  width: 6px;  /* 垂直滚动条的宽度 */
  height: 6px; /* 水平滚动条的高度 */
}

/* --- 滚动条轨道 (背景) --- */
::-webkit-scrollbar-track {
  /*
   * 使用 VitePress 的 `--vp-c-bg-soft` 变量作为轨道背景色。
   * 这个颜色在日间和夜间模式下会自动调整，确保与页面背景完美融合。
   */
  background-color: var(--vp-c-bg-soft);
  border-radius: 10px; /* 为轨道添加圆角，使其看起来更平滑 */
}

/* --- 滚动条滑块 (可拖动部分) --- */
::-webkit-scrollbar-thumb {
  /*
   * 使用 VitePress 的 `--vp-c-gray-2` 变量作为滑块颜色。
   * 这个颜色在日间模式下是浅灰色，在夜间模式下会自动变暗，
   * 以保持与背景的适当对比度，实现了您要求的“浅灰色”且自适应的效果。
   */
  background-color: var(--vp-c-gray-2);
  border-radius: 10px; /* 为滑块添加圆角，与轨道的圆角匹配 */

  /*
   * 添加一个透明边框并使用 `background-clip`，
   * 可以在滑块和轨道之间创造一个微小的间隙，视觉上更显精致、简约。
   */
  border: 1px solid transparent;
  background-clip: content-box;
}

/* --- 鼠标悬停在滑块上时的效果 --- */
::-webkit-scrollbar-thumb:hover {
  /*
   * 当鼠标悬停在滑块上时，颜色变为 `--vp-c-gray-1`。
   * 这个颜色比默认状态下的滑块颜色稍深，提供了一个清晰的视觉反馈。
   */
  background-color: var(--vp-c-gray-1);
}